{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\GitHub\\\\React-Lessons-Section10-Using-useEffect-useReducer-and-useContext\\\\src\\\\components\\\\MainHeader\\\\Navigation.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport SVG from \"../UI/SVG/SVG\";\nimport classes from \"./Navigation.module.css\";\nimport AuthContext from \"../../store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navigation = () => {\n  _s();\n  const authCtx = useContext(AuthContext);\n  return (\n    /*#__PURE__*/\n    // <AuthContext.Consumer>\n    //   {\n    //     // One way to listen to AuthContext state is using .Consumer component method appended to AuthContext component\n    //     // This will be as complex way of implementing AuthContext listener on the sub-components which needs its state\n    //     // AuthContext.Consumer is not a JSX component but a state component where we wrap the components receives the state provided by AuthContext state\n    //     // AuthContext.Consumer basically receives/listens to the initial state from AuthContext.Provider component to the components it wraps around\n    //     // With that adding this state component as wrapper, we dont need <React.Fragment> as root component, hence this AuthContext can take its place\n    //     // Auth.Consumer basically takes a child with arrow function, where the arguement will be context data which defined in AuthContext component and the\n    //     // function returns the JSX codes of the wrapped components\n    //     // now instead of props, we can replace it with authCtx to access its state\n    //   }\n    //   {(authCtx) => {\n    //     return (\n    //       <nav className={classes.nav}>\n    //         <ul>\n    //           {authCtx.isLoggedIn && (\n    //             <li>\n    //               <a href=\"/\">Users</a>\n    //             </li>\n    //           )}\n    //           {authCtx.isLoggedIn && (\n    //             <li>\n    //               <a href=\"/\">Admin</a>\n    //             </li>\n    //           )}\n    //           {authCtx.isLoggedIn && (\n    //             <li>\n    //               <button onClick={props.onLogout}>\n    //                 <SVG\n    //                   viewBox=\"0 0 512 512\"\n    //                   d=\"M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V256c0 17.7 14.3 32 32 32s32-14.3 32-32V32zM143.5 120.6c13.6-11.3 15.4-31.5 4.1-45.1s-31.5-15.4-45.1-4.1C49.7 115.4 16 181.8 16 256c0 132.5 107.5 240 240 240s240-107.5 240-240c0-74.2-33.8-140.6-86.6-184.6c-13.6-11.3-33.8-9.4-45.1 4.1s-9.4 33.8 4.1 45.1c38.9 32.3 63.5 81 63.5 135.4c0 97.2-78.8 176-176 176s-176-78.8-176-176c0-54.4 24.7-103.1 63.5-135.4z\"\n    //                 />\n    //                 Logout\n    //               </button>\n    //             </li>\n    //           )}\n    //         </ul>\n    //       </nav>\n    //     );\n    //   }}\n    // </AuthContext.Consumer>\n    _jsxDEV(\"nav\", {\n      className: classes.nav,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [authCtx.isLoggedIn && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Welcome &npb\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: authCtx.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), authCtx.isLoggedIn && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: authCtx.onLogout,\n            children: [/*#__PURE__*/_jsxDEV(SVG, {\n              viewBox: \"0 0 512 512\",\n              d: \"M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V256c0 17.7 14.3 32 32 32s32-14.3 32-32V32zM143.5 120.6c13.6-11.3 15.4-31.5 4.1-45.1s-31.5-15.4-45.1-4.1C49.7 115.4 16 181.8 16 256c0 132.5 107.5 240 240 240s240-107.5 240-240c0-74.2-33.8-140.6-86.6-184.6c-13.6-11.3-33.8-9.4-45.1 4.1s-9.4 33.8 4.1 45.1c38.9 32.3 63.5 81 63.5 135.4c0 97.2-78.8 176-176 176s-176-78.8-176-176c0-54.4 24.7-103.1 63.5-135.4z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), \"Logout\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Navigation, \"HgVQGKeM6jZ5dc2JVxj9nYffoaU=\");\n_c = Navigation;\nexport default Navigation;\nvar _c;\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"names":["React","useContext","SVG","classes","AuthContext","Navigation","authCtx","nav","isLoggedIn","name","onLogout"],"sources":["C:/Users/User/Documents/GitHub/React-Lessons-Section10-Using-useEffect-useReducer-and-useContext/src/components/MainHeader/Navigation.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport SVG from \"../UI/SVG/SVG\";\r\n\r\nimport classes from \"./Navigation.module.css\";\r\n\r\nimport AuthContext from \"../../store/auth-context\";\r\n\r\nconst Navigation = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  return (\r\n    // <AuthContext.Consumer>\r\n    //   {\r\n    //     // One way to listen to AuthContext state is using .Consumer component method appended to AuthContext component\r\n    //     // This will be as complex way of implementing AuthContext listener on the sub-components which needs its state\r\n    //     // AuthContext.Consumer is not a JSX component but a state component where we wrap the components receives the state provided by AuthContext state\r\n    //     // AuthContext.Consumer basically receives/listens to the initial state from AuthContext.Provider component to the components it wraps around\r\n    //     // With that adding this state component as wrapper, we dont need <React.Fragment> as root component, hence this AuthContext can take its place\r\n    //     // Auth.Consumer basically takes a child with arrow function, where the arguement will be context data which defined in AuthContext component and the\r\n    //     // function returns the JSX codes of the wrapped components\r\n    //     // now instead of props, we can replace it with authCtx to access its state\r\n    //   }\r\n    //   {(authCtx) => {\r\n    //     return (\r\n    //       <nav className={classes.nav}>\r\n    //         <ul>\r\n    //           {authCtx.isLoggedIn && (\r\n    //             <li>\r\n    //               <a href=\"/\">Users</a>\r\n    //             </li>\r\n    //           )}\r\n    //           {authCtx.isLoggedIn && (\r\n    //             <li>\r\n    //               <a href=\"/\">Admin</a>\r\n    //             </li>\r\n    //           )}\r\n    //           {authCtx.isLoggedIn && (\r\n    //             <li>\r\n    //               <button onClick={props.onLogout}>\r\n    //                 <SVG\r\n    //                   viewBox=\"0 0 512 512\"\r\n    //                   d=\"M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V256c0 17.7 14.3 32 32 32s32-14.3 32-32V32zM143.5 120.6c13.6-11.3 15.4-31.5 4.1-45.1s-31.5-15.4-45.1-4.1C49.7 115.4 16 181.8 16 256c0 132.5 107.5 240 240 240s240-107.5 240-240c0-74.2-33.8-140.6-86.6-184.6c-13.6-11.3-33.8-9.4-45.1 4.1s-9.4 33.8 4.1 45.1c38.9 32.3 63.5 81 63.5 135.4c0 97.2-78.8 176-176 176s-176-78.8-176-176c0-54.4 24.7-103.1 63.5-135.4z\"\r\n    //                 />\r\n    //                 Logout\r\n    //               </button>\r\n    //             </li>\r\n    //           )}\r\n    //         </ul>\r\n    //       </nav>\r\n    //     );\r\n    //   }}\r\n    // </AuthContext.Consumer>\r\n    <nav className={classes.nav}>\r\n      {\r\n        // Another way of listening to AuthContext state is using useContext hook/method\r\n        // This will be the simplest way of implementing AuthContext listener on the sub-components which needs its state\r\n      }\r\n      <ul>\r\n        {/* {authCtx.isLoggedIn && (\r\n          <li>\r\n            <a href=\"/\">Users</a>\r\n          </li>\r\n        )} */}\r\n        {authCtx.isLoggedIn && (\r\n          <li>\r\n            Welcome &npb\r\n            <span>{authCtx.name}</span>\r\n          </li>\r\n        )}\r\n        {authCtx.isLoggedIn && (\r\n          <li>\r\n            <button onClick={authCtx.onLogout}>\r\n              <SVG\r\n                viewBox=\"0 0 512 512\"\r\n                d=\"M288 32c0-17.7-14.3-32-32-32s-32 14.3-32 32V256c0 17.7 14.3 32 32 32s32-14.3 32-32V32zM143.5 120.6c13.6-11.3 15.4-31.5 4.1-45.1s-31.5-15.4-45.1-4.1C49.7 115.4 16 181.8 16 256c0 132.5 107.5 240 240 240s240-107.5 240-240c0-74.2-33.8-140.6-86.6-184.6c-13.6-11.3-33.8-9.4-45.1 4.1s-9.4 33.8 4.1 45.1c38.9 32.3 63.5 81 63.5 135.4c0 97.2-78.8 176-176 176s-176-78.8-176-176c0-54.4 24.7-103.1 63.5-135.4z\"\r\n              />\r\n              Logout\r\n            </button>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,GAAG,MAAM,eAAe;AAE/B,OAAOC,OAAO,MAAM,yBAAyB;AAE7C,OAAOC,WAAW,MAAM,0BAA0B;AAAC;AAEnD,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAMC,OAAO,GAAGL,UAAU,CAACG,WAAW,CAAC;EACvC;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAAK,SAAS,EAAED,OAAO,CAACI,GAAI;MAAA,uBAK1B;QAAA,WAMGD,OAAO,CAACE,UAAU,iBACjB;UAAA,WAAI,cAEF;YAAA,UAAOF,OAAO,CAACG;UAAI;YAAA;YAAA;YAAA;UAAA,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAE9B,EACAH,OAAO,CAACE,UAAU,iBACjB;UAAA,uBACE;YAAQ,OAAO,EAAEF,OAAO,CAACI,QAAS;YAAA,wBAChC,QAAC,GAAG;cACF,OAAO,EAAC,aAAa;cACrB,CAAC,EAAC;YAA8Y;cAAA;cAAA;cAAA;YAAA,QAChZ,UAEJ;UAAA;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA,QAEZ;MAAA;QAAA;QAAA;QAAA;MAAA;IACE;MAAA;MAAA;MAAA;IAAA;EACD;AAEV,CAAC;AAAC,GA3EIL,UAAU;AAAA,KAAVA,UAAU;AA6EhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}