{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Desktop\\\\react_lectures\\\\Section 10\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formReducer = (state, action) => {\n  if (action.inputType === \"email\") {\n    if (action.type === \"USER_INPUT\") {\n      return {\n        value: action.val,\n        isValid: action.val.includes(\"@\")\n      };\n    }\n    if (action.type === \"INPUT_BLUR\") {\n      return {\n        value: state.val,\n        isValid: state.val.includes(\"@\")\n      };\n    }\n  }\n  if (action.inputType === \"password\") {\n    if (action.type === \"USER_INPUT\") {\n      return {\n        value: action.val,\n        isValid: action.val.trim().length > 6\n      };\n    }\n    if (action.type === \"INPUT_BLUR\") {\n      return {\n        value: state.val,\n        isValid: state.val.trim().length > 6\n      };\n    }\n  }\n  if (action.type === \"INPUT_RESET\") {\n    return {\n      emailValue: \"\",\n      passwordValue: \"\",\n      isValid: true\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  const [emailState, dispatchEmail] = useReducer(formReducer, {\n    value: \"\",\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(formReducer, {\n    value: \"\",\n    isValid: false\n  });\n  const [formState, dispatchForm] = useReducer(formReducer, {\n    isValid: false\n  });\n\n  // Without dependencies array, this code below will run every single time when state changes, adding dependecies will ensure only it runs once when component renders\n  useEffect(() => {\n    console.log(\"USEEFFECT running without dependency!\");\n    return () => {\n      console.log(\"USE EFFECT CLEANUP running without dependency\");\n    };\n  });\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      mode: \"email\",\n      val: event.target.value\n    });\n  };\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      mode: \"password\",\n      val: event.target.value\n    });\n  };\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"EMAIL_BLUR\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"PASSWORD_BLUR\"\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n  const clearFormHandler = () => {\n    dispatchForm(\"INPUT_RESET\");\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formState.value,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n          type: \"reset\",\n          className: classes.btn,\n          onClick: clearFormHandler,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"z6KxzcrkPqatDGWLSn/H3G+1mbE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useReducer","Card","classes","Button","formReducer","state","action","inputType","type","value","val","isValid","includes","trim","length","emailValue","passwordValue","Login","props","emailState","dispatchEmail","passwordState","dispatchPassword","formState","dispatchForm","console","log","emailChangeHandler","event","mode","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","clearFormHandler","login","control","invalid","actions","btn"],"sources":["C:/Users/Raj/Desktop/react_lectures/Section 10/01-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst formReducer = (state, action) => {\n  if (action.inputType === \"email\") {\n    if (action.type === \"USER_INPUT\") {\n      return {\n        value: action.val,\n        isValid: action.val.includes(\"@\"),\n      };\n    }\n\n    if (action.type === \"INPUT_BLUR\") {\n      return {\n        value: state.val,\n        isValid: state.val.includes(\"@\"),\n      };\n    }\n  }\n\n  if (action.inputType === \"password\") {\n    if (action.type === \"USER_INPUT\") {\n      return {\n        value: action.val,\n        isValid: action.val.trim().length > 6,\n      };\n    }\n\n    if (action.type === \"INPUT_BLUR\") {\n      return {\n        value: state.val,\n        isValid: state.val.trim().length > 6,\n      };\n    }\n  }\n\n  if (action.type === \"INPUT_RESET\") {\n    return {\n      emailValue: \"\",\n      passwordValue: \"\",\n      isValid: true,\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false,\n  };\n};\n\nconst Login = (props) => {\n  const [emailState, dispatchEmail] = useReducer(formReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(formReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  const [formState, dispatchForm] = useReducer(formReducer, {\n    isValid: false,\n  });\n\n  // Without dependencies array, this code below will run every single time when state changes, adding dependecies will ensure only it runs once when component renders\n  useEffect(() => {\n    console.log(\"USEEFFECT running without dependency!\");\n\n    return () => {\n      console.log(\"USE EFFECT CLEANUP running without dependency\");\n    };\n  });\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      mode: \"email\",\n      val: event.target.value,\n    });\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      mode: \"password\",\n      val: event.target.value,\n    });\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"EMAIL_BLUR\",\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"PASSWORD_BLUR\",\n    });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  const clearFormHandler = () => {\n    dispatchForm(\"INPUT_RESET\");\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button\n            type=\"submit\"\n            className={classes.btn}\n            disabled={!formState.value}\n          >\n            Login\n          </Button>\n          &nbsp;\n          <Button\n            type=\"reset\"\n            className={classes.btn}\n            onClick={clearFormHandler}\n          >\n            Reset\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}