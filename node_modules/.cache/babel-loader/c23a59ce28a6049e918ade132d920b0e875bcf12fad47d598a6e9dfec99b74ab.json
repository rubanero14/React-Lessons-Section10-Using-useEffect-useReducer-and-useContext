{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Desktop\\\\react_lectures\\\\Section 10\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.val,\n      isValid: state.val.includes(\"@\")\n    };\n  }\n  if (action.type === \"INPUT_RESET\") {\n    return {\n      emailValue: \"\",\n      passwordValue: \"\"\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false\n  });\n\n  // useEffect takes 2 params, a callback function and array of dependencies. In React context, useEffect is similar to Computed and Watch method in Vue combined\n  // In dependencies array, only pass the all the variable names that are used within useEffect block scope, in this context entredEmail and enteredPassword\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log(\"Checking input valididity...\");\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n\n  //   // This is called as Clean Up (Debouncing method) function where this return wont run on the first render, but subsequent render and unmount state,\n  //   // it will be running first and the other code above\n  //   return () => {\n  //     // This function will ensure the code above the return statement only runs omce, suitable for running HTTP request code based on keystroke\n  //     console.log(\"Cleanup\");\n\n  //     // Resetting the timer of the identifier variable on every keystroke.\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]); // Dependencies acts as watcher for the variable value changes inside the dependencies array,\n\n  // Without dependencies array, this code below will run every single time when state changes, adding dependecies will ensure only it runs once when component renders\n  useEffect(() => {\n    console.log(\"USEEFFECT running without dependency!\");\n    return () => {\n      console.log(\"USE EFFECT CLEANUP running without dependency\");\n    };\n  });\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n  };\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n  const clearFormHandler = () => {\n    dispatchEmail(\"INPUT_RESET\");\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n          type: \"reset\",\n          className: classes.btn,\n          onClick: clearFormHandler,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"p3Zt5+1IAF2dD1uAMkm9EVODb28=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","emailValue","passwordValue","Login","props","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","console","log","emailChangeHandler","event","target","passwordChangeHandler","trim","length","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","clearFormHandler","login","control","invalid","actions","btn"],"sources":["C:/Users/Raj/Desktop/react_lectures/Section 10/01-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\"),\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.val,\n      isValid: state.val.includes(\"@\"),\n    };\n  }\n\n  if (action.type === \"INPUT_RESET\") {\n    return {\n      emailValue: \"\",\n      passwordValue: \"\",\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false,\n  };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  // useEffect takes 2 params, a callback function and array of dependencies. In React context, useEffect is similar to Computed and Watch method in Vue combined\n  // In dependencies array, only pass the all the variable names that are used within useEffect block scope, in this context entredEmail and enteredPassword\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log(\"Checking input valididity...\");\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n\n  //   // This is called as Clean Up (Debouncing method) function where this return wont run on the first render, but subsequent render and unmount state,\n  //   // it will be running first and the other code above\n  //   return () => {\n  //     // This function will ensure the code above the return statement only runs omce, suitable for running HTTP request code based on keystroke\n  //     console.log(\"Cleanup\");\n\n  //     // Resetting the timer of the identifier variable on every keystroke.\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]); // Dependencies acts as watcher for the variable value changes inside the dependencies array,\n\n  // Without dependencies array, this code below will run every single time when state changes, adding dependecies will ensure only it runs once when component renders\n  useEffect(() => {\n    console.log(\"USEEFFECT running without dependency!\");\n\n    return () => {\n      console.log(\"USE EFFECT CLEANUP running without dependency\");\n    };\n  });\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value,\n    });\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: \"INPUT_BLUR\",\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  const clearFormHandler = () => {\n    dispatchEmail(\"INPUT_RESET\");\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n          &nbsp;\n          <Button\n            type=\"reset\"\n            className={classes.btn}\n            onClick={clearFormHandler}\n          >\n            Reset\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}