{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Desktop\\\\react_lectures\\\\Section 10\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport SVG from \"../UI/SVG/SVG\";\n\n// State management helper function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailValidator = /^\\S+@\\S+\\.\\S+$/gi; // email validator regex\n\nconst initialState = {\n  login: {\n    email: {\n      val: \"\",\n      isValid: false\n    },\n    password: {\n      val: \"\",\n      isValid: false\n    }\n  }\n};\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"EMAIL_INPUT\":\n      return {\n        ...state,\n        email: {\n          val: action.val,\n          isValid: emailValidator.test(action.val)\n        }\n      };\n    case \"PASSWORD_INPUT\":\n      return {\n        ...state,\n        password: {\n          val: action.val.trim(),\n          isValid: action.val.trim().length > 6\n        }\n      };\n    case \"EMAIL_BLUR\":\n    case \"PASSWORD_BLUR\":\n      return {\n        ...state\n      };\n    default:\n      return initialState;\n  }\n};\nconst Login = props => {\n  _s();\n  /*\r\n    // \r\n      Using Destructuring to pulling out isValid properties from emailState and passwordState object and storing them into emailIsValid and passIsValid constants \r\n      using alias assignment, and use it as dependencies and values to useEffect below to ensure it dont fires futher if form is already valid\r\n    //\r\n    const { isValid: emailIsValid } = emailState;\r\n    const { isValid: passwordIsValid } = passwordState;\r\n    useEffect(() => {\r\n      const identifier = setTimeout(() => {\r\n        console.log(\"Checking input valididity...\");\r\n        setFormIsValid(emailIsValid && passwordIsValid);\r\n      }, 500);\r\n        // This is called as Clean Up (Debouncing method) function where this return wont run on the first render, but subsequent render and unmount state,\r\n      // it will be running first and the other code above\r\n      return () => {\r\n        // This function will ensure the code above the return statement only runs omce, suitable for running HTTP request code based on keystroke\r\n        console.log(\"Cleanup\");\r\n          // Resetting the timer of the identifier variable on every keystroke.\r\n        clearTimeout(identifier);\r\n      };\r\n    }, [emailIsValid, passwordIsValid]);\r\n  */\n\n  // State management useReducers\n  const [loginState, dispatchLogin] = useReducer(formReducer, initialState.login);\n  const emailChangeHandler = event => {\n    dispatchLogin({\n      type: \"EMAIL_INPUT\",\n      val: event.target.value\n    });\n  };\n  const passwordChangeHandler = event => {\n    dispatchLogin({\n      type: \"PASSWORD_INPUT\",\n      val: event.target.value\n    });\n  };\n  const validateEmailHandler = () => {\n    dispatchLogin({\n      type: \"EMAIL_BLUR\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    dispatchLogin({\n      type: \"PASSWORD_BLUR\"\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n\n    // Sending new user data using props function to parent component to update new list or array of users whenever add use button is clicked\n    props.onLogin(loginState.email.val, loginState.password.val);\n  };\n  const clearFormHandler = () => {\n    dispatchLogin({\n      ...initialState\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${!loginState.email.isValid ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: loginState.email.val,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${!loginState.password.isValid ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: loginState.password.val,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !(loginState.password.isValid && loginState.email.isValid),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n          type: \"reset\",\n          className: classes.btn,\n          onClick: clearFormHandler,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n          type: \"link\",\n          className: classes.btn,\n          href: \"https://github.com/rubanero14/React-Lessons-Section10-Using-useEffect-useReducer-and-useContext\",\n          children: \"Source Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"5J0elVzEgHYOqEKBwrFpki22ZWc=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useReducer","Card","classes","Button","SVG","emailValidator","initialState","login","email","val","isValid","password","formReducer","state","action","type","test","trim","length","Login","props","loginState","dispatchLogin","emailChangeHandler","event","target","value","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","clearFormHandler","control","invalid","actions","btn"],"sources":["C:/Users/Raj/Desktop/react_lectures/Section 10/01-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nimport Card from \"../UI/Card/Card\";\r\nimport classes from \"./Login.module.css\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport SVG from \"../UI/SVG/SVG\";\r\n\r\n// State management helper function\r\nconst emailValidator = /^\\S+@\\S+\\.\\S+$/gi; // email validator regex\r\n\r\nconst initialState = {\r\n  login: {\r\n    email: {\r\n      val: \"\",\r\n      isValid: false,\r\n    },\r\n    password: {\r\n      val: \"\",\r\n      isValid: false,\r\n    },\r\n  },\r\n};\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"EMAIL_INPUT\":\r\n      return {\r\n        ...state,\r\n        email: {\r\n          val: action.val,\r\n          isValid: emailValidator.test(action.val),\r\n        },\r\n      };\r\n\r\n    case \"PASSWORD_INPUT\":\r\n      return {\r\n        ...state,\r\n        password: {\r\n          val: action.val.trim(),\r\n          isValid: action.val.trim().length > 6,\r\n        },\r\n      };\r\n\r\n    case \"EMAIL_BLUR\":\r\n    case \"PASSWORD_BLUR\":\r\n      return {\r\n        ...state,\r\n      };\r\n\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nconst Login = (props) => {\r\n  /*\r\n    // \r\n      Using Destructuring to pulling out isValid properties from emailState and passwordState object and storing them into emailIsValid and passIsValid constants \r\n      using alias assignment, and use it as dependencies and values to useEffect below to ensure it dont fires futher if form is already valid\r\n    //\r\n    const { isValid: emailIsValid } = emailState;\r\n    const { isValid: passwordIsValid } = passwordState;\r\n    useEffect(() => {\r\n      const identifier = setTimeout(() => {\r\n        console.log(\"Checking input valididity...\");\r\n        setFormIsValid(emailIsValid && passwordIsValid);\r\n      }, 500);\r\n\r\n      // This is called as Clean Up (Debouncing method) function where this return wont run on the first render, but subsequent render and unmount state,\r\n      // it will be running first and the other code above\r\n      return () => {\r\n        // This function will ensure the code above the return statement only runs omce, suitable for running HTTP request code based on keystroke\r\n        console.log(\"Cleanup\");\r\n\r\n        // Resetting the timer of the identifier variable on every keystroke.\r\n        clearTimeout(identifier);\r\n      };\r\n    }, [emailIsValid, passwordIsValid]);\r\n  */\r\n\r\n  // State management useReducers\r\n  const [loginState, dispatchLogin] = useReducer(\r\n    formReducer,\r\n    initialState.login\r\n  );\r\n\r\n  const emailChangeHandler = (event) => {\r\n    dispatchLogin({\r\n      type: \"EMAIL_INPUT\",\r\n      val: event.target.value,\r\n    });\r\n  };\r\n\r\n  const passwordChangeHandler = (event) => {\r\n    dispatchLogin({\r\n      type: \"PASSWORD_INPUT\",\r\n      val: event.target.value,\r\n    });\r\n  };\r\n\r\n  const validateEmailHandler = () => {\r\n    dispatchLogin({\r\n      type: \"EMAIL_BLUR\",\r\n    });\r\n  };\r\n\r\n  const validatePasswordHandler = () => {\r\n    dispatchLogin({\r\n      type: \"PASSWORD_BLUR\",\r\n    });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Sending new user data using props function to parent component to update new list or array of users whenever add use button is clicked\r\n    props.onLogin(loginState.email.val, loginState.password.val);\r\n  };\r\n\r\n  const clearFormHandler = () => {\r\n    dispatchLogin({\r\n      ...initialState,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.login}>\r\n      <form onSubmit={submitHandler}>\r\n        <div\r\n          className={`${classes.control} ${\r\n            !loginState.email.isValid ? classes.invalid : \"\"\r\n          }`}\r\n        >\r\n          <label htmlFor=\"email\">E-Mail</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={loginState.email.val}\r\n            onChange={emailChangeHandler}\r\n            onBlur={validateEmailHandler}\r\n          />\r\n        </div>\r\n        <div\r\n          className={`${classes.control} ${\r\n            !loginState.password.isValid ? classes.invalid : \"\"\r\n          }`}\r\n        >\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={loginState.password.val}\r\n            onChange={passwordChangeHandler}\r\n            onBlur={validatePasswordHandler}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            type=\"submit\"\r\n            className={classes.btn}\r\n            disabled={\r\n              !(loginState.password.isValid && loginState.email.isValid)\r\n            }\r\n          >\r\n            Login\r\n          </Button>\r\n          &nbsp;\r\n          <Button\r\n            type=\"reset\"\r\n            className={classes.btn}\r\n            onClick={clearFormHandler}\r\n          >\r\n            Reset\r\n          </Button>\r\n          &nbsp;\r\n          <Button\r\n            type=\"link\"\r\n            className={classes.btn}\r\n            href=\"https://github.com/rubanero14/React-Lessons-Section10-Using-useEffect-useReducer-and-useContext\"\r\n          >\r\n            Source Code\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}