{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raj\\\\Desktop\\\\react_lectures\\\\Section 10\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport AuthContext from \"./store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userName, setUserName] = useState(\"\");\n  useEffect(() => {\n    if (localStorage.getItem(\"login\") === \"yes\") {\n      setIsLoggedIn(true);\n      setUserName(localStorage.getItem(\"userName\"));\n    }\n  }, []);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"login\", \"yes\");\n    localStorage.setItem(\"userName\", email);\n    setUserName(email);\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem(\"login\");\n    localStorage.removeItem(\"userName\");\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler,\n        userName: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Vrp2Q+QCazRZDbyxLBubo3cVn6k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","App","isLoggedIn","setIsLoggedIn","userName","setUserName","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem"],"sources":["C:/Users/Raj/Desktop/react_lectures/Section 10/01-starting-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport Login from \"./components/Login/Login\";\r\nimport Home from \"./components/Home/Home\";\r\nimport MainHeader from \"./components/MainHeader/MainHeader\";\r\n\r\nimport AuthContext from \"./store/auth-context\";\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"login\") === \"yes\") {\r\n      setIsLoggedIn(true);\r\n      setUserName(localStorage.getItem(\"userName\"));\r\n    }\r\n  }, []);\r\n\r\n  const loginHandler = (email, password) => {\r\n    // We should of course check email and password\r\n    // But it's just a dummy/ demo anyways\r\n    localStorage.setItem(\"login\", \"yes\");\r\n    localStorage.setItem(\"userName\", email);\r\n    setUserName(email);\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem(\"login\");\r\n    localStorage.removeItem(\"userName\");\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: isLoggedIn,\r\n      }}\r\n    >\r\n      {\r\n        // AuthContext.Provider is not a JSX component but a state component where we wrap the components uses the state provided by AuthContext state\r\n        // AuthContext must have value prop and store the AuthContext state as copy to enable value changes based on user interaction\r\n        // Since in this app we already using useState based isLoggedIn state, we can pass the value into AuthContext.Provider as dynamic instead of hardcoding it to ensure all\r\n        // other subcomponents receives latest state that uses useState based logic\r\n        // AuthContext.Provider basically provides the initial state to the components it wraps around\r\n        // With that adding this state component as wrapper, we dont need <React.Fragment> as root component, hence this AuthContext can take its place\r\n      }\r\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\r\n      <main>\r\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\r\n        {isLoggedIn && <Home onLogout={logoutHandler} userName={userName} />}\r\n      </main>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAE3D,OAAOC,WAAW,MAAM,sBAAsB;AAAC;AAE/C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,IAAIU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,KAAK,EAAE;MAC3CJ,aAAa,CAAC,IAAI,CAAC;MACnBE,WAAW,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC/C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxC;IACA;IACAJ,YAAY,CAACK,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;IACpCL,YAAY,CAACK,OAAO,CAAC,UAAU,EAAEF,KAAK,CAAC;IACvCJ,WAAW,CAACI,KAAK,CAAC;IAClBN,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMS,aAAa,GAAG,MAAM;IAC1BN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCP,YAAY,CAACO,UAAU,CAAC,UAAU,CAAC;IACnCV,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IACnB,KAAK,EAAE;MACLD,UAAU,EAAEA;IACd,CAAE;IAAA,wBAUF,QAAC,UAAU;MAAC,eAAe,EAAEA,UAAW;MAAC,QAAQ,EAAEU;IAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eACpE;MAAA,WACG,CAACV,UAAU,iBAAI,QAAC,KAAK;QAAC,OAAO,EAAEM;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,EAC/CN,UAAU,iBAAI,QAAC,IAAI;QAAC,QAAQ,EAAEU,aAAc;QAAC,QAAQ,EAAER;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/D;EAAA;IAAA;IAAA;IAAA;EAAA,QACc;AAE3B;AAAC,GA/CQH,GAAG;AAAA,KAAHA,GAAG;AAiDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}